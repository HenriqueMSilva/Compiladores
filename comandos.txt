uc2017246594_uc2017255094
4ezPHL

https://git.dei.uc.pt/users/sign_in

docker run -v "/c/Users/User/Desktop/2º Semestre/COMP:/home/" -ti compiladores bin/bash

cd home

lex jucompiler.l

clang-3.9 -o jucompiler lex.yy.c

./jucompiler -l < testes/INTLIT.juc | diff testes/INTLIT.out -

./jucompiler -l < Comp2020/meta1/IdentifiersAndKeywords2.juc | diff Comp2020/meta1/IdentifiersAndKeywords2.out -

_________________________________
$ git checkout 923a62fac2f114f13bf388b542020b3982c8a982 .

git ignore: https://stackoverflow.com/questions/43380622/github-desktop-is-committing-ignored-files





valgrind --leak-check=full          --show-leak-kinds=all          --track-origins=yes          --verbose          ./jucompiler -s < Call_me_maybe.java

--verbose          --log-file=valgrind-out.txt
coloca a flag log-file




0.0e0 sim
1.e   

e-1 sim
1e+01 sim
1.e+01 sim
"\\" imprime \\
"qsd\ [enter] imprime erro de escape e de unterminated string
"\[enter]"\\"
""

#length impime 
--------------




----------------------------------------------------------------------------------------------------------------------------------

"\ [este \ é do \n ou é \\n??]


excluir escape sequences?
--------------
clone fork branch commit para esse branch merge request para site

[1-9]("_"*[0-9]|[0-9])* | 0


1)
\" e \\ visiveis 
\n e \t invisiveis
msa sao todos escape?
sim


2)como é que o lex funciona com escape
ele le 1 caracter ascci de cada x, ou seja vai ver caracters de escape, mas as regras estao defenidas com +1 caracter (existe um passo de sintesse na compilacao)


___
\\n					escrever 1 \ seguida de 1 n
\n					 ENTER
"\n"					 ENTER

___
escrevo barra  -> vai ser escape->	 1) se depois vier um operador(excluindo "): significa que queremos apanhar o caracter do operador
									2) se vier um caracter nao operador: significa que estamos a tentar apanhar um caracter de escape
nota: \" é um caracter de escape 


3 META---------------------------------------------------------------------------------------------------------------------------------

Duviva:
metodos podem ter mesmo nome se tiverem assinaturas diff?
param de entrada com o mesmo nome? o que se faz??

Atençao:
variaveis com nome return podem estragar as minhas comp (averiguar)




sem flag so imprime erros







none aparece quando???

anotar o interior de um metodo repetido?

var global nome, metodo nome, var local nome podem ser iguals?


Eq devolve SEMPRE bool
Parse int e .leng devolve SEMPRE int


add conot be alpierd to sting[] array







f(int)

apanha o f (int a); 


De João Ribeiro para Todos:  06:04 PM
f(int,double) e f(double,int) também dá ambiguo
f(1,1)

é ambiguo


.length(int)-> operador imcompativel