Terminals unused in grammar

   BOOLLIT
   AND
   ASSIGN
   STAR
   DIV
   EQ
   GE
   GT
   LE
   LT
   MINUS
   MOD
   NE
   NOT
   OR
   PLUS
   ARROW
   LSHIFT
   RSHIFT
   XOR
   DOTLENGTH
   ELSE
   IF
   PRINT
   PARSEINT
   RETURN
   WHILE


Grammar

    0 $accept: program $end

    1 program: CLASS ID LBRACE metodos RBRACE

    2 metodos: %empty
    3        | MethodDecl metodos
    4        | FieldDecl metodos
    5        | SEMICOLON metodos

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON

    8 FieldDeclNext: %empty
    9              | COMMA ID

   10 Type: BOOL
   11     | INT
   12     | DOUBLE

   13 MethodHeader: Type ID LPAR FormalParams RPAR
   14             | VOID ID LPAR FormalParams RPAR

   15 FormalParams: %empty
   16             | Type ID FormalParamsNext
   17             | STRING LSQ RSQ ID

   18 FormalParamsNext: %empty
   19                 | COMMA Type ID FormalParamsNext

   20 MethodBody: LBRACE Body RBRACE

   21 Body: %empty
   22     | VarDecl Body

   23 VarDecl: Type ID VarDeclNext SEMICOLON

   24 VarDeclNext: %empty
   25            | COMMA ID


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOLLIT (258)
AND (259)
ASSIGN (260)
STAR (261)
COMMA (262) 9 19 25
DIV (263)
EQ (264)
GE (265)
GT (266)
LBRACE (267) 1 20
LE (268)
LPAR (269) 13 14
RPAR (270) 13 14
LSQ (271) 17
LT (272)
MINUS (273)
MOD (274)
NE (275)
NOT (276)
OR (277)
PLUS (278)
RBRACE (279) 1 20
RSQ (280) 17
SEMICOLON (281) 5 7 23
ARROW (282)
LSHIFT (283)
RSHIFT (284)
XOR (285)
BOOL (286) 10
CLASS (287) 1
DOTLENGTH (288)
DOUBLE (289) 12
ELSE (290)
IF (291)
INT (292) 11
PRINT (293)
PARSEINT (294)
PUBLIC (295) 6 7
RETURN (296)
STATIC (297) 6 7
STRING (298) 17
VOID (299) 14
WHILE (300)
ID (301) 1 7 9 13 14 16 17 19 23 25


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
metodos (49)
    on left: 2 3 4 5, on right: 1 3 4 5
MethodDecl (50)
    on left: 6, on right: 3
FieldDecl (51)
    on left: 7, on right: 4
FieldDeclNext (52)
    on left: 8 9, on right: 7
Type (53)
    on left: 10 11 12, on right: 7 13 16 19 23
MethodHeader (54)
    on left: 13 14, on right: 6
FormalParams (55)
    on left: 15 16 17, on right: 13 14
FormalParamsNext (56)
    on left: 18 19, on right: 16 19
MethodBody (57)
    on left: 20, on right: 6
Body (58)
    on left: 21 22, on right: 20 22
VarDecl (59)
    on left: 23, on right: 22
VarDeclNext (60)
    on left: 24 25, on right: 23


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID LBRACE metodos RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . LBRACE metodos RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID LBRACE . metodos RBRACE

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 8
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 6

    5 metodos: SEMICOLON . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 11
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 7

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclNext SEMICOLON

    STATIC  shift, and go to state 12


State 8

    1 program: CLASS ID LBRACE metodos . RBRACE

    RBRACE  shift, and go to state 13


State 9

    3 metodos: MethodDecl . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 14
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 10

    4 metodos: FieldDecl . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 15
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 11

    5 metodos: SEMICOLON metodos .

    $default  reduce using rule 5 (metodos)


State 12

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclNext SEMICOLON

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    VOID    shift, and go to state 19

    Type          go to state 20
    MethodHeader  go to state 21


State 13

    1 program: CLASS ID LBRACE metodos RBRACE .

    $default  reduce using rule 1 (program)


State 14

    3 metodos: MethodDecl metodos .

    $default  reduce using rule 3 (metodos)


State 15

    4 metodos: FieldDecl metodos .

    $default  reduce using rule 4 (metodos)


State 16

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 17

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 18

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 19

   14 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 22


State 20

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclNext SEMICOLON
   13 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 23


State 21

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 24

    MethodBody  go to state 25


State 22

   14 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 26


State 23

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclNext SEMICOLON
   13 MethodHeader: Type ID . LPAR FormalParams RPAR

    COMMA  shift, and go to state 27
    LPAR   shift, and go to state 28

    $default  reduce using rule 8 (FieldDeclNext)

    FieldDeclNext  go to state 29


State 24

   20 MethodBody: LBRACE . Body RBRACE

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18

    $default  reduce using rule 21 (Body)

    Type     go to state 30
    Body     go to state 31
    VarDecl  go to state 32


State 25

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 26

   14 MethodHeader: VOID ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 33

    $default  reduce using rule 15 (FormalParams)

    Type          go to state 34
    FormalParams  go to state 35


State 27

    9 FieldDeclNext: COMMA . ID

    ID  shift, and go to state 36


State 28

   13 MethodHeader: Type ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 33

    $default  reduce using rule 15 (FormalParams)

    Type          go to state 34
    FormalParams  go to state 37


State 29

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 30

   23 VarDecl: Type . ID VarDeclNext SEMICOLON

    ID  shift, and go to state 39


State 31

   20 MethodBody: LBRACE Body . RBRACE

    RBRACE  shift, and go to state 40


State 32

   22 Body: VarDecl . Body

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18

    $default  reduce using rule 21 (Body)

    Type     go to state 30
    Body     go to state 41
    VarDecl  go to state 32


State 33

   17 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 42


State 34

   16 FormalParams: Type . ID FormalParamsNext

    ID  shift, and go to state 43


State 35

   14 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 44


State 36

    9 FieldDeclNext: COMMA ID .

    $default  reduce using rule 9 (FieldDeclNext)


State 37

   13 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 45


State 38

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 39

   23 VarDecl: Type ID . VarDeclNext SEMICOLON

    COMMA  shift, and go to state 46

    $default  reduce using rule 24 (VarDeclNext)

    VarDeclNext  go to state 47


State 40

   20 MethodBody: LBRACE Body RBRACE .

    $default  reduce using rule 20 (MethodBody)


State 41

   22 Body: VarDecl Body .

    $default  reduce using rule 22 (Body)


State 42

   17 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 48


State 43

   16 FormalParams: Type ID . FormalParamsNext

    COMMA  shift, and go to state 49

    $default  reduce using rule 18 (FormalParamsNext)

    FormalParamsNext  go to state 50


State 44

   14 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 45

   13 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 13 (MethodHeader)


State 46

   25 VarDeclNext: COMMA . ID

    ID  shift, and go to state 51


State 47

   23 VarDecl: Type ID VarDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 48

   17 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 53


State 49

   19 FormalParamsNext: COMMA . Type ID FormalParamsNext

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18

    Type  go to state 54


State 50

   16 FormalParams: Type ID FormalParamsNext .

    $default  reduce using rule 16 (FormalParams)


State 51

   25 VarDeclNext: COMMA ID .

    $default  reduce using rule 25 (VarDeclNext)


State 52

   23 VarDecl: Type ID VarDeclNext SEMICOLON .

    $default  reduce using rule 23 (VarDecl)


State 53

   17 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 17 (FormalParams)


State 54

   19 FormalParamsNext: COMMA Type . ID FormalParamsNext

    ID  shift, and go to state 55


State 55

   19 FormalParamsNext: COMMA Type ID . FormalParamsNext

    COMMA  shift, and go to state 49

    $default  reduce using rule 18 (FormalParamsNext)

    FormalParamsNext  go to state 56


State 56

   19 FormalParamsNext: COMMA Type ID FormalParamsNext .

    $default  reduce using rule 19 (FormalParamsNext)
