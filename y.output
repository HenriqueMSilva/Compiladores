Terminals unused in grammar

   ARROW


Grammar

    0 $accept: program $end

    1 program: CLASS ID LBRACE metodos RBRACE

    2 metodos: %empty
    3        | MethodDecl metodos
    4        | FieldDecl metodos
    5        | SEMICOLON metodos

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON

    8 FieldDeclNext: %empty
    9              | COMMA ID FieldDeclNext

   10 Type: BOOL
   11     | INT
   12     | DOUBLE

   13 MethodHeader: Type ID LPAR FormalParams RPAR
   14             | VOID ID LPAR FormalParams RPAR

   15 FormalParams: %empty
   16             | Type ID FormalParamsNext
   17             | STRING LSQ RSQ ID

   18 FormalParamsNext: %empty
   19                 | COMMA Type ID FormalParamsNext

   20 MethodBody: LBRACE Body RBRACE

   21 Body: %empty
   22     | VarDecl Body
   23     | Statement Body

   24 VarDecl: Type ID VarDeclNext SEMICOLON

   25 VarDeclNext: %empty
   26            | COMMA ID VarDeclNext

   27 Statement: IF LPAR Expr RPAR Statement
   28          | IF LPAR Expr RPAR Statement ELSE Statement
   29          | WHILE LPAR Expr RPAR Statement
   30          | RETURN StatementExpOp SEMICOLON
   31          | LBRACE StatementZrOuMais RBRACE
   32          | StateMethodIAssignmentParseArgs SEMICOLON
   33          | PRINT LPAR StatementPrint RPAR SEMICOLON

   34 StatementZrOuMais: %empty
   35                  | Statement StatementZrOuMais

   36 StatementExpOp: %empty
   37               | Expr

   38 StatementPrint: STRLIT
   39               | Expr

   40 StateMethodIAssignmentParseArgs: %empty
   41                                | MethodInvocation
   42                                | Assigment
   43                                | ParseArgs

   44 MethodInvocation: ID LPAR ExpCommaExpOP RPAR

   45 ExpCommaExpOP: %empty
   46              | Expr CommaExprZrOuMais

   47 CommaExprZrOuMais: %empty
   48                  | COMMA Expr CommaExprZrOuMais

   49 Assigment: ID ASSIGN Expr

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR

   51 Expr: Expr AND Expr
   52     | Expr OR Expr
   53     | Expr EQ Expr
   54     | Expr GE Expr
   55     | Expr GT Expr
   56     | Expr LE Expr
   57     | Expr LT Expr
   58     | Expr NE Expr
   59     | Expr PLUS Expr
   60     | Expr MINUS Expr
   61     | Expr STAR Expr
   62     | Expr DIV Expr
   63     | Expr MOD Expr
   64     | Expr XOR Expr
   65     | Expr LSHIFT Expr
   66     | Expr RSHIFT Expr
   67     | NOT Expr
   68     | MINUS Expr
   69     | PLUS Expr
   70     | LPAR Expr RPAR
   71     | MethodInvocation
   72     | Assigment
   73     | ParseArgs
   74     | ID DotLengthOp
   75     | REALLIT
   76     | BOOLLIT
   77     | INTLIT

   78 DotLengthOp: %empty
   79            | DOTLENGTH


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOLLIT (258) 76
AND (259) 51
ASSIGN (260) 49
STAR (261) 61
COMMA (262) 9 19 26 48
DIV (263) 62
EQ (264) 53
GE (265) 54
GT (266) 55
LBRACE (267) 1 20 31
LE (268) 56
LPAR (269) 13 14 27 28 29 33 44 50 70
RPAR (270) 13 14 27 28 29 33 44 50 70
LSQ (271) 17 50
LT (272) 57
MINUS (273) 60 68
MOD (274) 63
NE (275) 58
NOT (276) 67
OR (277) 52
PLUS (278) 59 69
RBRACE (279) 1 20 31
RSQ (280) 17 50
SEMICOLON (281) 5 7 24 30 32 33
ARROW (282)
LSHIFT (283) 65
RSHIFT (284) 66
XOR (285) 64
BOOL (286) 10
CLASS (287) 1
DOTLENGTH (288) 79
DOUBLE (289) 12
ELSE (290) 28
IF (291) 27 28
INT (292) 11
PRINT (293) 33
PARSEINT (294) 50
PUBLIC (295) 6 7
RETURN (296) 30
STATIC (297) 6 7
STRING (298) 17
VOID (299) 14
WHILE (300) 29
REALLIT (301) 75
STRLIT (302) 38
INTLIT (303) 77
ID (304) 1 7 9 13 14 16 17 19 24 26 44 49 50 74
REDUCE (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
metodos (53)
    on left: 2 3 4 5, on right: 1 3 4 5
MethodDecl (54)
    on left: 6, on right: 3
FieldDecl (55)
    on left: 7, on right: 4
FieldDeclNext (56)
    on left: 8 9, on right: 7 9
Type (57)
    on left: 10 11 12, on right: 7 13 16 19 24
MethodHeader (58)
    on left: 13 14, on right: 6
FormalParams (59)
    on left: 15 16 17, on right: 13 14
FormalParamsNext (60)
    on left: 18 19, on right: 16 19
MethodBody (61)
    on left: 20, on right: 6
Body (62)
    on left: 21 22 23, on right: 20 22 23
VarDecl (63)
    on left: 24, on right: 22
VarDeclNext (64)
    on left: 25 26, on right: 24 26
Statement (65)
    on left: 27 28 29 30 31 32 33, on right: 23 27 28 29 35
StatementZrOuMais (66)
    on left: 34 35, on right: 31 35
StatementExpOp (67)
    on left: 36 37, on right: 30
StatementPrint (68)
    on left: 38 39, on right: 33
StateMethodIAssignmentParseArgs (69)
    on left: 40 41 42 43, on right: 32
MethodInvocation (70)
    on left: 44, on right: 41 71
ExpCommaExpOP (71)
    on left: 45 46, on right: 44
CommaExprZrOuMais (72)
    on left: 47 48, on right: 46 48
Assigment (73)
    on left: 49, on right: 42 72
ParseArgs (74)
    on left: 50, on right: 43 73
Expr (75)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76 77, on right: 27 28 29 37 39 46 48 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
DotLengthOp (76)
    on left: 78 79, on right: 74


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID LBRACE metodos RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . LBRACE metodos RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID LBRACE . metodos RBRACE

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 8
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 6

    5 metodos: SEMICOLON . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 11
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 7

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclNext SEMICOLON

    STATIC  shift, and go to state 12


State 8

    1 program: CLASS ID LBRACE metodos . RBRACE

    RBRACE  shift, and go to state 13


State 9

    3 metodos: MethodDecl . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 14
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 10

    4 metodos: FieldDecl . metodos

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 2 (metodos)

    metodos     go to state 15
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 11

    5 metodos: SEMICOLON metodos .

    $default  reduce using rule 5 (metodos)


State 12

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclNext SEMICOLON

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    VOID    shift, and go to state 19

    Type          go to state 20
    MethodHeader  go to state 21


State 13

    1 program: CLASS ID LBRACE metodos RBRACE .

    $default  reduce using rule 1 (program)


State 14

    3 metodos: MethodDecl metodos .

    $default  reduce using rule 3 (metodos)


State 15

    4 metodos: FieldDecl metodos .

    $default  reduce using rule 4 (metodos)


State 16

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 17

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 18

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 19

   14 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 22


State 20

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclNext SEMICOLON
   13 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 23


State 21

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 24

    MethodBody  go to state 25


State 22

   14 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 26


State 23

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclNext SEMICOLON
   13 MethodHeader: Type ID . LPAR FormalParams RPAR

    COMMA  shift, and go to state 27
    LPAR   shift, and go to state 28

    $default  reduce using rule 8 (FieldDeclNext)

    FieldDeclNext  go to state 29


State 24

   20 MethodBody: LBRACE . Body RBRACE

    LBRACE    shift, and go to state 30
    BOOL      shift, and go to state 16
    DOUBLE    shift, and go to state 17
    IF        shift, and go to state 31
    INT       shift, and go to state 18
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)
    $default   reduce using rule 21 (Body)

    Type                             go to state 37
    Body                             go to state 38
    VarDecl                          go to state 39
    Statement                        go to state 40
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 25

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 26

   14 MethodHeader: VOID ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 45

    $default  reduce using rule 15 (FormalParams)

    Type          go to state 46
    FormalParams  go to state 47


State 27

    9 FieldDeclNext: COMMA . ID FieldDeclNext

    ID  shift, and go to state 48


State 28

   13 MethodHeader: Type ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 45

    $default  reduce using rule 15 (FormalParams)

    Type          go to state 46
    FormalParams  go to state 49


State 29

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 30

   31 Statement: LBRACE . StatementZrOuMais RBRACE

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)
    $default   reduce using rule 34 (StatementZrOuMais)

    Statement                        go to state 51
    StatementZrOuMais                go to state 52
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 31

   27 Statement: IF . LPAR Expr RPAR Statement
   28          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 53


State 32

   33 Statement: PRINT . LPAR StatementPrint RPAR SEMICOLON

    LPAR  shift, and go to state 54


State 33

   50 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 55


State 34

   30 Statement: RETURN . StatementExpOp SEMICOLON

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    $default  reduce using rule 36 (StatementExpOp)

    StatementExpOp    go to state 64
    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 68


State 35

   29 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 69


State 36

   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   49 Assigment: ID . ASSIGN Expr

    ASSIGN  shift, and go to state 70
    LPAR    shift, and go to state 71


State 37

   24 VarDecl: Type . ID VarDeclNext SEMICOLON

    ID  shift, and go to state 72


State 38

   20 MethodBody: LBRACE Body . RBRACE

    RBRACE  shift, and go to state 73


State 39

   22 Body: VarDecl . Body

    LBRACE    shift, and go to state 30
    BOOL      shift, and go to state 16
    DOUBLE    shift, and go to state 17
    IF        shift, and go to state 31
    INT       shift, and go to state 18
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)
    $default   reduce using rule 21 (Body)

    Type                             go to state 37
    Body                             go to state 74
    VarDecl                          go to state 39
    Statement                        go to state 40
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 40

   23 Body: Statement . Body

    LBRACE    shift, and go to state 30
    BOOL      shift, and go to state 16
    DOUBLE    shift, and go to state 17
    IF        shift, and go to state 31
    INT       shift, and go to state 18
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)
    $default   reduce using rule 21 (Body)

    Type                             go to state 37
    Body                             go to state 75
    VarDecl                          go to state 39
    Statement                        go to state 40
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 41

   32 Statement: StateMethodIAssignmentParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 42

   41 StateMethodIAssignmentParseArgs: MethodInvocation .

    $default  reduce using rule 41 (StateMethodIAssignmentParseArgs)


State 43

   42 StateMethodIAssignmentParseArgs: Assigment .

    $default  reduce using rule 42 (StateMethodIAssignmentParseArgs)


State 44

   43 StateMethodIAssignmentParseArgs: ParseArgs .

    $default  reduce using rule 43 (StateMethodIAssignmentParseArgs)


State 45

   17 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 77


State 46

   16 FormalParams: Type . ID FormalParamsNext

    ID  shift, and go to state 78


State 47

   14 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 79


State 48

    9 FieldDeclNext: COMMA ID . FieldDeclNext

    COMMA  shift, and go to state 27

    $default  reduce using rule 8 (FieldDeclNext)

    FieldDeclNext  go to state 80


State 49

   13 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 81


State 50

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 51

   35 StatementZrOuMais: Statement . StatementZrOuMais

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)
    $default   reduce using rule 34 (StatementZrOuMais)

    Statement                        go to state 51
    StatementZrOuMais                go to state 82
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 52

   31 Statement: LBRACE StatementZrOuMais . RBRACE

    RBRACE  shift, and go to state 83


State 53

   27 Statement: IF LPAR . Expr RPAR Statement
   28          | IF LPAR . Expr RPAR Statement ELSE Statement

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 84


State 54

   33 Statement: PRINT LPAR . StatementPrint RPAR SEMICOLON

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    STRLIT    shift, and go to state 85
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    StatementPrint    go to state 86
    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 87


State 55

   50 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR

    ID  shift, and go to state 88


State 56

   76 Expr: BOOLLIT .

    $default  reduce using rule 76 (Expr)


State 57

   70 Expr: LPAR . Expr RPAR

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 89


State 58

   68 Expr: MINUS . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 90


State 59

   67 Expr: NOT . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 91


State 60

   69 Expr: PLUS . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 92


State 61

   75 Expr: REALLIT .

    $default  reduce using rule 75 (Expr)


State 62

   77 Expr: INTLIT .

    $default  reduce using rule 77 (Expr)


State 63

   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   49 Assigment: ID . ASSIGN Expr
   74 Expr: ID . DotLengthOp

    ASSIGN     shift, and go to state 70
    LPAR       shift, and go to state 71
    DOTLENGTH  shift, and go to state 93

    $default  reduce using rule 78 (DotLengthOp)

    DotLengthOp  go to state 94


State 64

   30 Statement: RETURN StatementExpOp . SEMICOLON

    SEMICOLON  shift, and go to state 95


State 65

   71 Expr: MethodInvocation .

    $default  reduce using rule 71 (Expr)


State 66

   72 Expr: Assigment .

    $default  reduce using rule 72 (Expr)


State 67

   73 Expr: ParseArgs .

    $default  reduce using rule 73 (Expr)


State 68

   37 StatementExpOp: Expr .
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 37 (StatementExpOp)


State 69

   29 Statement: WHILE LPAR . Expr RPAR Statement

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 112


State 70

   49 Assigment: ID ASSIGN . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 113


State 71

   44 MethodInvocation: ID LPAR . ExpCommaExpOP RPAR

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    $default  reduce using rule 45 (ExpCommaExpOP)

    MethodInvocation  go to state 65
    ExpCommaExpOP     go to state 114
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 115


State 72

   24 VarDecl: Type ID . VarDeclNext SEMICOLON

    COMMA  shift, and go to state 116

    $default  reduce using rule 25 (VarDeclNext)

    VarDeclNext  go to state 117


State 73

   20 MethodBody: LBRACE Body RBRACE .

    $default  reduce using rule 20 (MethodBody)


State 74

   22 Body: VarDecl Body .

    $default  reduce using rule 22 (Body)


State 75

   23 Body: Statement Body .

    $default  reduce using rule 23 (Body)


State 76

   32 Statement: StateMethodIAssignmentParseArgs SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 77

   17 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 118


State 78

   16 FormalParams: Type ID . FormalParamsNext

    COMMA  shift, and go to state 119

    $default  reduce using rule 18 (FormalParamsNext)

    FormalParamsNext  go to state 120


State 79

   14 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 80

    9 FieldDeclNext: COMMA ID FieldDeclNext .

    $default  reduce using rule 9 (FieldDeclNext)


State 81

   13 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 13 (MethodHeader)


State 82

   35 StatementZrOuMais: Statement StatementZrOuMais .

    $default  reduce using rule 35 (StatementZrOuMais)


State 83

   31 Statement: LBRACE StatementZrOuMais RBRACE .

    $default  reduce using rule 31 (Statement)


State 84

   27 Statement: IF LPAR Expr . RPAR Statement
   28          | IF LPAR Expr . RPAR Statement ELSE Statement
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    RPAR    shift, and go to state 121
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 85

   38 StatementPrint: STRLIT .

    $default  reduce using rule 38 (StatementPrint)


State 86

   33 Statement: PRINT LPAR StatementPrint . RPAR SEMICOLON

    RPAR  shift, and go to state 122


State 87

   39 StatementPrint: Expr .
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 39 (StatementPrint)


State 88

   50 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 123


State 89

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr
   70     | LPAR Expr . RPAR

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    RPAR    shift, and go to state 124
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 90

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr
   68     | MINUS Expr .

    STAR  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 105

    $default  reduce using rule 68 (Expr)


State 91

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr
   67     | NOT Expr .

    $default  reduce using rule 67 (Expr)


State 92

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr
   69     | PLUS Expr .

    STAR  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 105

    $default  reduce using rule 69 (Expr)


State 93

   79 DotLengthOp: DOTLENGTH .

    $default  reduce using rule 79 (DotLengthOp)


State 94

   74 Expr: ID DotLengthOp .

    $default  reduce using rule 74 (Expr)


State 95

   30 Statement: RETURN StatementExpOp SEMICOLON .

    $default  reduce using rule 30 (Statement)


State 96

   51 Expr: Expr AND . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 125


State 97

   61 Expr: Expr STAR . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 126


State 98

   62 Expr: Expr DIV . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 127


State 99

   53 Expr: Expr EQ . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 128


State 100

   54 Expr: Expr GE . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 129


State 101

   55 Expr: Expr GT . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 130


State 102

   56 Expr: Expr LE . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 131


State 103

   57 Expr: Expr LT . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 132


State 104

   60 Expr: Expr MINUS . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 133


State 105

   63 Expr: Expr MOD . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 134


State 106

   58 Expr: Expr NE . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 135


State 107

   52 Expr: Expr OR . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 136


State 108

   59 Expr: Expr PLUS . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 137


State 109

   65 Expr: Expr LSHIFT . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 138


State 110

   66 Expr: Expr RSHIFT . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 139


State 111

   64 Expr: Expr XOR . Expr

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 140


State 112

   29 Statement: WHILE LPAR Expr . RPAR Statement
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    RPAR    shift, and go to state 141
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 113

   49 Assigment: ID ASSIGN Expr .
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 49 (Assigment)


State 114

   44 MethodInvocation: ID LPAR ExpCommaExpOP . RPAR

    RPAR  shift, and go to state 142


State 115

   46 ExpCommaExpOP: Expr . CommaExprZrOuMais
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    COMMA   shift, and go to state 143
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 47 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 144


State 116

   26 VarDeclNext: COMMA . ID VarDeclNext

    ID  shift, and go to state 145


State 117

   24 VarDecl: Type ID VarDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 118

   17 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 147


State 119

   19 FormalParamsNext: COMMA . Type ID FormalParamsNext

    BOOL    shift, and go to state 16
    DOUBLE  shift, and go to state 17
    INT     shift, and go to state 18

    Type  go to state 148


State 120

   16 FormalParams: Type ID FormalParamsNext .

    $default  reduce using rule 16 (FormalParams)


State 121

   27 Statement: IF LPAR Expr RPAR . Statement
   28          | IF LPAR Expr RPAR . Statement ELSE Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 149
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 122

   33 Statement: PRINT LPAR StatementPrint RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 123

   50 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 151


State 124

   70 Expr: LPAR Expr RPAR .

    $default  reduce using rule 70 (Expr)


State 125

   51 Expr: Expr . AND Expr
   51     | Expr AND Expr .
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 51 (Expr)


State 126

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   61     | Expr STAR Expr .
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    $default  reduce using rule 61 (Expr)


State 127

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   62     | Expr DIV Expr .
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    $default  reduce using rule 62 (Expr)


State 128

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   53     | Expr EQ Expr .
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 53 (Expr)


State 129

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   54     | Expr GE Expr .
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 54 (Expr)


State 130

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   55     | Expr GT Expr .
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 55 (Expr)


State 131

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   56     | Expr LE Expr .
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 56 (Expr)


State 132

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   57     | Expr LT Expr .
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 57 (Expr)


State 133

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   60     | Expr MINUS Expr .
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 105

    $default  reduce using rule 60 (Expr)


State 134

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   63     | Expr MOD Expr .
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    $default  reduce using rule 63 (Expr)


State 135

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   58     | Expr NE Expr .
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 58 (Expr)


State 136

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   52     | Expr OR Expr .
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 52 (Expr)


State 137

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   59     | Expr PLUS Expr .
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 105

    $default  reduce using rule 59 (Expr)


State 138

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   65     | Expr LSHIFT Expr .
   66     | Expr . RSHIFT Expr

    STAR   shift, and go to state 97
    DIV    shift, and go to state 98
    MINUS  shift, and go to state 104
    MOD    shift, and go to state 105
    PLUS   shift, and go to state 108

    $default  reduce using rule 65 (Expr)


State 139

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr
   66     | Expr RSHIFT Expr .

    STAR   shift, and go to state 97
    DIV    shift, and go to state 98
    MINUS  shift, and go to state 104
    MOD    shift, and go to state 105
    PLUS   shift, and go to state 108

    $default  reduce using rule 66 (Expr)


State 140

   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   64     | Expr XOR Expr .
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 64 (Expr)


State 141

   29 Statement: WHILE LPAR Expr RPAR . Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 152
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 142

   44 MethodInvocation: ID LPAR ExpCommaExpOP RPAR .

    $default  reduce using rule 44 (MethodInvocation)


State 143

   48 CommaExprZrOuMais: COMMA . Expr CommaExprZrOuMais

    BOOLLIT   shift, and go to state 56
    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    REALLIT   shift, and go to state 61
    INTLIT    shift, and go to state 62
    ID        shift, and go to state 63

    MethodInvocation  go to state 65
    Assigment         go to state 66
    ParseArgs         go to state 67
    Expr              go to state 153


State 144

   46 ExpCommaExpOP: Expr CommaExprZrOuMais .

    $default  reduce using rule 46 (ExpCommaExpOP)


State 145

   26 VarDeclNext: COMMA ID . VarDeclNext

    COMMA  shift, and go to state 116

    $default  reduce using rule 25 (VarDeclNext)

    VarDeclNext  go to state 154


State 146

   24 VarDecl: Type ID VarDeclNext SEMICOLON .

    $default  reduce using rule 24 (VarDecl)


State 147

   17 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 17 (FormalParams)


State 148

   19 FormalParamsNext: COMMA Type . ID FormalParamsNext

    ID  shift, and go to state 155


State 149

   27 Statement: IF LPAR Expr RPAR Statement .
   28          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 156

    $default  reduce using rule 27 (Statement)


State 150

   33 Statement: PRINT LPAR StatementPrint RPAR SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 151

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    RSQ     shift, and go to state 157
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 152

   29 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 29 (Statement)


State 153

   48 CommaExprZrOuMais: COMMA Expr . CommaExprZrOuMais
   51 Expr: Expr . AND Expr
   52     | Expr . OR Expr
   53     | Expr . EQ Expr
   54     | Expr . GE Expr
   55     | Expr . GT Expr
   56     | Expr . LE Expr
   57     | Expr . LT Expr
   58     | Expr . NE Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | Expr . MOD Expr
   64     | Expr . XOR Expr
   65     | Expr . LSHIFT Expr
   66     | Expr . RSHIFT Expr

    AND     shift, and go to state 96
    STAR    shift, and go to state 97
    COMMA   shift, and go to state 143
    DIV     shift, and go to state 98
    EQ      shift, and go to state 99
    GE      shift, and go to state 100
    GT      shift, and go to state 101
    LE      shift, and go to state 102
    LT      shift, and go to state 103
    MINUS   shift, and go to state 104
    MOD     shift, and go to state 105
    NE      shift, and go to state 106
    OR      shift, and go to state 107
    PLUS    shift, and go to state 108
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 47 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 158


State 154

   26 VarDeclNext: COMMA ID VarDeclNext .

    $default  reduce using rule 26 (VarDeclNext)


State 155

   19 FormalParamsNext: COMMA Type ID . FormalParamsNext

    COMMA  shift, and go to state 119

    $default  reduce using rule 18 (FormalParamsNext)

    FormalParamsNext  go to state 159


State 156

   28 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 160
    StateMethodIAssignmentParseArgs  go to state 41
    MethodInvocation                 go to state 42
    Assigment                        go to state 43
    ParseArgs                        go to state 44


State 157

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 161


State 158

   48 CommaExprZrOuMais: COMMA Expr CommaExprZrOuMais .

    $default  reduce using rule 48 (CommaExprZrOuMais)


State 159

   19 FormalParamsNext: COMMA Type ID FormalParamsNext .

    $default  reduce using rule 19 (FormalParamsNext)


State 160

   28 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 28 (Statement)


State 161

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 50 (ParseArgs)
