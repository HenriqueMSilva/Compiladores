Terminals unused in grammar

   ARROW


Grammar

    0 $accept: program $end

    1 program: CLASS ID LBRACE metodos RBRACE

    2 metodos: %empty
    3        | MethodDecl metodos
    4        | FieldDecl metodos
    5        | SEMICOLON metodos

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON
    8          | error SEMICOLON

    9 FieldDeclNext: %empty
   10              | COMMA ID FieldDeclNext

   11 Type: BOOL
   12     | INT
   13     | DOUBLE

   14 MethodHeader: Type ID LPAR MethodParams RPAR
   15             | VOID ID LPAR MethodParams RPAR

   16 MethodParams: %empty
   17             | Type ID MethodParamsNext
   18             | STRING LSQ RSQ ID

   19 MethodParamsNext: %empty
   20                 | COMMA Type ID MethodParamsNext

   21 MethodBody: LBRACE Body RBRACE

   22 Body: %empty
   23     | VarDecl Body
   24     | Statement Body

   25 VarDecl: Type ID VarDeclNext SEMICOLON

   26 VarDeclNext: %empty
   27            | COMMA ID VarDeclNext

   28 Statement: IF LPAR Expr RPAR Statement
   29          | IF LPAR Expr RPAR Statement ELSE Statement
   30          | WHILE LPAR Expr RPAR Statement
   31          | RETURN StatementExpOp SEMICOLON
   32          | LBRACE StatementZrOuMais RBRACE
   33          | StateMethodIAssignmentParseArgs SEMICOLON
   34          | PRINT LPAR StatementPrint RPAR SEMICOLON
   35          | error SEMICOLON

   36 StatementZrOuMais: %empty
   37                  | Statement StatementZrOuMais

   38 StatementExpOp: %empty
   39               | Expr

   40 StatementPrint: STRLIT
   41               | Expr

   42 StateMethodIAssignmentParseArgs: %empty
   43                                | MethodInvocation
   44                                | Assigment
   45                                | ParseArgs

   46 MethodInvocation: ID LPAR ExpCommaExpOP RPAR
   47                 | ID LPAR error RPAR

   48 ExpCommaExpOP: %empty
   49              | Expr CommaExprZrOuMais

   50 CommaExprZrOuMais: %empty
   51                  | COMMA Expr CommaExprZrOuMais

   52 Assigment: ID ASSIGN Expr

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   54          | PARSEINT LPAR error RPAR

   55 Expr: Expr AND Expr
   56     | Expr OR Expr
   57     | Expr EQ Expr
   58     | Expr GE Expr
   59     | Expr GT Expr
   60     | Expr LE Expr
   61     | Expr LT Expr
   62     | Expr NE Expr
   63     | Expr PLUS Expr
   64     | Expr MINUS Expr
   65     | Expr STAR Expr
   66     | Expr DIV Expr
   67     | Expr MOD Expr
   68     | Expr XOR Expr
   69     | Expr LSHIFT Expr
   70     | Expr RSHIFT Expr
   71     | NOT Expr
   72     | MINUS Expr
   73     | PLUS Expr
   74     | LPAR Expr RPAR
   75     | LPAR error RPAR
   76     | MethodInvocation
   77     | Assigment
   78     | ParseArgs
   79     | ID
   80     | ID DOTLENGTH
   81     | REALLIT
   82     | BOOLLIT
   83     | INTLIT


Terminals, with rules where they appear

$end (0) 0
error (256) 8 35 47 54 75
BOOLLIT (258) 82
AND (259) 55
ASSIGN (260) 52
STAR (261) 65
COMMA (262) 10 20 27 51
DIV (263) 66
EQ (264) 57
GE (265) 58
GT (266) 59
LBRACE (267) 1 21 32
LE (268) 60
LPAR (269) 14 15 28 29 30 34 46 47 53 54 74 75
RPAR (270) 14 15 28 29 30 34 46 47 53 54 74 75
LSQ (271) 18 53
LT (272) 61
MINUS (273) 64 72
MOD (274) 67
NE (275) 62
NOT (276) 71
OR (277) 56
PLUS (278) 63 73
RBRACE (279) 1 21 32
RSQ (280) 18 53
SEMICOLON (281) 5 7 8 25 31 33 34 35
ARROW (282)
LSHIFT (283) 69
RSHIFT (284) 70
XOR (285) 68
BOOL (286) 11
CLASS (287) 1
DOTLENGTH (288) 80
DOUBLE (289) 13
ELSE (290) 29
IF (291) 28 29
INT (292) 12
PRINT (293) 34
PARSEINT (294) 53 54
PUBLIC (295) 6 7
RETURN (296) 31
STATIC (297) 6 7
STRING (298) 18
VOID (299) 15
WHILE (300) 30
REALLIT (301) 81
ID (302) 1 7 10 14 15 17 18 20 25 27 46 47 52 53 79 80
INTLIT (303) 83
STRLIT (304) 40
REDUCE (305)
ASSIGNMENT (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
metodos (54)
    on left: 2 3 4 5, on right: 1 3 4 5
MethodDecl (55)
    on left: 6, on right: 3
FieldDecl (56)
    on left: 7 8, on right: 4
FieldDeclNext (57)
    on left: 9 10, on right: 7 10
Type (58)
    on left: 11 12 13, on right: 7 14 17 20 25
MethodHeader (59)
    on left: 14 15, on right: 6
MethodParams (60)
    on left: 16 17 18, on right: 14 15
MethodParamsNext (61)
    on left: 19 20, on right: 17 20
MethodBody (62)
    on left: 21, on right: 6
Body (63)
    on left: 22 23 24, on right: 21 23 24
VarDecl (64)
    on left: 25, on right: 23
VarDeclNext (65)
    on left: 26 27, on right: 25 27
Statement (66)
    on left: 28 29 30 31 32 33 34 35, on right: 24 28 29 30 37
StatementZrOuMais (67)
    on left: 36 37, on right: 32 37
StatementExpOp (68)
    on left: 38 39, on right: 31
StatementPrint (69)
    on left: 40 41, on right: 34
StateMethodIAssignmentParseArgs (70)
    on left: 42 43 44 45, on right: 33
MethodInvocation (71)
    on left: 46 47, on right: 43 76
ExpCommaExpOP (72)
    on left: 48 49, on right: 46
CommaExprZrOuMais (73)
    on left: 50 51, on right: 49 51
Assigment (74)
    on left: 52, on right: 44 77
ParseArgs (75)
    on left: 53 54, on right: 45 78
Expr (76)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83, on right: 28 29 30 39 41 49 51
    52 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID LBRACE metodos RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . LBRACE metodos RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID LBRACE . metodos RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    8 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    5 metodos: SEMICOLON . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 13
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 8

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclNext SEMICOLON

    STATIC  shift, and go to state 14


State 9

    1 program: CLASS ID LBRACE metodos . RBRACE

    RBRACE  shift, and go to state 15


State 10

    3 metodos: MethodDecl . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    4 metodos: FieldDecl . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

    8 FieldDecl: error SEMICOLON .

    $default  reduce using rule 8 (FieldDecl)


State 13

    5 metodos: SEMICOLON metodos .

    $default  reduce using rule 5 (metodos)


State 14

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclNext SEMICOLON

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 15

    1 program: CLASS ID LBRACE metodos RBRACE .

    $default  reduce using rule 1 (program)


State 16

    3 metodos: MethodDecl metodos .

    $default  reduce using rule 3 (metodos)


State 17

    4 metodos: FieldDecl metodos .

    $default  reduce using rule 4 (metodos)


State 18

   11 Type: BOOL .

    $default  reduce using rule 11 (Type)


State 19

   13 Type: DOUBLE .

    $default  reduce using rule 13 (Type)


State 20

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 21

   15 MethodHeader: VOID . ID LPAR MethodParams RPAR

    ID  shift, and go to state 24


State 22

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclNext SEMICOLON
   14 MethodHeader: Type . ID LPAR MethodParams RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   15 MethodHeader: VOID ID . LPAR MethodParams RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclNext SEMICOLON
   14 MethodHeader: Type ID . LPAR MethodParams RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 9 (FieldDeclNext)

    FieldDeclNext  go to state 31


State 26

   21 MethodBody: LBRACE . Body RBRACE

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 22 (Body)
    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 41
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 28

   15 MethodHeader: VOID ID LPAR . MethodParams RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 48

    $default  reduce using rule 16 (MethodParams)

    Type          go to state 49
    MethodParams  go to state 50


State 29

   10 FieldDeclNext: COMMA . ID FieldDeclNext

    ID  shift, and go to state 51


State 30

   14 MethodHeader: Type ID LPAR . MethodParams RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 48

    $default  reduce using rule 16 (MethodParams)

    Type          go to state 49
    MethodParams  go to state 52


State 31

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 32

   35 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 33

   32 Statement: LBRACE . StatementZrOuMais RBRACE

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 36 (StatementZrOuMais)
    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 55
    StatementZrOuMais                go to state 56
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 34

   28 Statement: IF . LPAR Expr RPAR Statement
   29          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 57


State 35

   34 Statement: PRINT . LPAR StatementPrint RPAR SEMICOLON

    LPAR  shift, and go to state 58


State 36

   53 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   54          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 59


State 37

   31 Statement: RETURN . StatementExpOp SEMICOLON

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    $default  reduce using rule 38 (StatementExpOp)

    StatementExpOp    go to state 68
    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 72


State 38

   30 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 73


State 39

   46 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   47                 | ID . LPAR error RPAR
   52 Assigment: ID . ASSIGN Expr

    ASSIGN  shift, and go to state 74
    LPAR    shift, and go to state 75


State 40

   25 VarDecl: Type . ID VarDeclNext SEMICOLON

    ID  shift, and go to state 76


State 41

   21 MethodBody: LBRACE Body . RBRACE

    RBRACE  shift, and go to state 77


State 42

   23 Body: VarDecl . Body

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 22 (Body)
    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 78
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 43

   24 Body: Statement . Body

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 22 (Body)
    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 79
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 44

   33 Statement: StateMethodIAssignmentParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 45

   43 StateMethodIAssignmentParseArgs: MethodInvocation .

    $default  reduce using rule 43 (StateMethodIAssignmentParseArgs)


State 46

   44 StateMethodIAssignmentParseArgs: Assigment .

    $default  reduce using rule 44 (StateMethodIAssignmentParseArgs)


State 47

   45 StateMethodIAssignmentParseArgs: ParseArgs .

    $default  reduce using rule 45 (StateMethodIAssignmentParseArgs)


State 48

   18 MethodParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 81


State 49

   17 MethodParams: Type . ID MethodParamsNext

    ID  shift, and go to state 82


State 50

   15 MethodHeader: VOID ID LPAR MethodParams . RPAR

    RPAR  shift, and go to state 83


State 51

   10 FieldDeclNext: COMMA ID . FieldDeclNext

    COMMA  shift, and go to state 29

    $default  reduce using rule 9 (FieldDeclNext)

    FieldDeclNext  go to state 84


State 52

   14 MethodHeader: Type ID LPAR MethodParams . RPAR

    RPAR  shift, and go to state 85


State 53

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 54

   35 Statement: error SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 55

   37 StatementZrOuMais: Statement . StatementZrOuMais

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 36 (StatementZrOuMais)
    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 55
    StatementZrOuMais                go to state 86
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 56

   32 Statement: LBRACE StatementZrOuMais . RBRACE

    RBRACE  shift, and go to state 87


State 57

   28 Statement: IF LPAR . Expr RPAR Statement
   29          | IF LPAR . Expr RPAR Statement ELSE Statement

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 88


State 58

   34 Statement: PRINT LPAR . StatementPrint RPAR SEMICOLON

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67
    STRLIT    shift, and go to state 89

    StatementPrint    go to state 90
    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 91


State 59

   53 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   54          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 92
    ID     shift, and go to state 93


State 60

   82 Expr: BOOLLIT .

    $default  reduce using rule 82 (Expr)


State 61

   74 Expr: LPAR . Expr RPAR
   75     | LPAR . error RPAR

    error     shift, and go to state 94
    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 95


State 62

   72 Expr: MINUS . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 96


State 63

   71 Expr: NOT . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 97


State 64

   73 Expr: PLUS . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 98


State 65

   81 Expr: REALLIT .

    $default  reduce using rule 81 (Expr)


State 66

   46 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   47                 | ID . LPAR error RPAR
   52 Assigment: ID . ASSIGN Expr
   79 Expr: ID .
   80     | ID . DOTLENGTH

    ASSIGN     shift, and go to state 74
    LPAR       shift, and go to state 75
    DOTLENGTH  shift, and go to state 99

    $default  reduce using rule 79 (Expr)


State 67

   83 Expr: INTLIT .

    $default  reduce using rule 83 (Expr)


State 68

   31 Statement: RETURN StatementExpOp . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 69

   76 Expr: MethodInvocation .

    $default  reduce using rule 76 (Expr)


State 70

   77 Expr: Assigment .

    $default  reduce using rule 77 (Expr)


State 71

   78 Expr: ParseArgs .

    $default  reduce using rule 78 (Expr)


State 72

   39 StatementExpOp: Expr .
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 39 (StatementExpOp)


State 73

   30 Statement: WHILE LPAR . Expr RPAR Statement

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 117


State 74

   52 Assigment: ID ASSIGN . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 118


State 75

   46 MethodInvocation: ID LPAR . ExpCommaExpOP RPAR
   47                 | ID LPAR . error RPAR

    error     shift, and go to state 119
    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    RPAR  reduce using rule 48 (ExpCommaExpOP)

    MethodInvocation  go to state 69
    ExpCommaExpOP     go to state 120
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 121


State 76

   25 VarDecl: Type ID . VarDeclNext SEMICOLON

    COMMA  shift, and go to state 122

    $default  reduce using rule 26 (VarDeclNext)

    VarDeclNext  go to state 123


State 77

   21 MethodBody: LBRACE Body RBRACE .

    $default  reduce using rule 21 (MethodBody)


State 78

   23 Body: VarDecl Body .

    $default  reduce using rule 23 (Body)


State 79

   24 Body: Statement Body .

    $default  reduce using rule 24 (Body)


State 80

   33 Statement: StateMethodIAssignmentParseArgs SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 81

   18 MethodParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 124


State 82

   17 MethodParams: Type ID . MethodParamsNext

    COMMA  shift, and go to state 125

    $default  reduce using rule 19 (MethodParamsNext)

    MethodParamsNext  go to state 126


State 83

   15 MethodHeader: VOID ID LPAR MethodParams RPAR .

    $default  reduce using rule 15 (MethodHeader)


State 84

   10 FieldDeclNext: COMMA ID FieldDeclNext .

    $default  reduce using rule 10 (FieldDeclNext)


State 85

   14 MethodHeader: Type ID LPAR MethodParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 86

   37 StatementZrOuMais: Statement StatementZrOuMais .

    $default  reduce using rule 37 (StatementZrOuMais)


State 87

   32 Statement: LBRACE StatementZrOuMais RBRACE .

    $default  reduce using rule 32 (Statement)


State 88

   28 Statement: IF LPAR Expr . RPAR Statement
   29          | IF LPAR Expr . RPAR Statement ELSE Statement
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    RPAR    shift, and go to state 127
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116


State 89

   40 StatementPrint: STRLIT .

    $default  reduce using rule 40 (StatementPrint)


State 90

   34 Statement: PRINT LPAR StatementPrint . RPAR SEMICOLON

    RPAR  shift, and go to state 128


State 91

   41 StatementPrint: Expr .
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 41 (StatementPrint)


State 92

   54 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 129


State 93

   53 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 130


State 94

   75 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 131


State 95

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr
   74     | LPAR Expr . RPAR

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    RPAR    shift, and go to state 132
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116


State 96

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr
   72     | MINUS Expr .

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 110

    $default  reduce using rule 72 (Expr)


State 97

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr
   71     | NOT Expr .

    $default  reduce using rule 71 (Expr)


State 98

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr
   73     | PLUS Expr .

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 110

    $default  reduce using rule 73 (Expr)


State 99

   80 Expr: ID DOTLENGTH .

    $default  reduce using rule 80 (Expr)


State 100

   31 Statement: RETURN StatementExpOp SEMICOLON .

    $default  reduce using rule 31 (Statement)


State 101

   55 Expr: Expr AND . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 133


State 102

   65 Expr: Expr STAR . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 134


State 103

   66 Expr: Expr DIV . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 135


State 104

   57 Expr: Expr EQ . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 136


State 105

   58 Expr: Expr GE . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 137


State 106

   59 Expr: Expr GT . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 138


State 107

   60 Expr: Expr LE . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 139


State 108

   61 Expr: Expr LT . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 140


State 109

   64 Expr: Expr MINUS . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 141


State 110

   67 Expr: Expr MOD . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 142


State 111

   62 Expr: Expr NE . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 143


State 112

   56 Expr: Expr OR . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 144


State 113

   63 Expr: Expr PLUS . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 145


State 114

   69 Expr: Expr LSHIFT . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 146


State 115

   70 Expr: Expr RSHIFT . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 147


State 116

   68 Expr: Expr XOR . Expr

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 148


State 117

   30 Statement: WHILE LPAR Expr . RPAR Statement
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    RPAR    shift, and go to state 149
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116


State 118

   52 Assigment: ID ASSIGN Expr .
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    $default  reduce using rule 52 (Assigment)


State 119

   47 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 150


State 120

   46 MethodInvocation: ID LPAR ExpCommaExpOP . RPAR

    RPAR  shift, and go to state 151


State 121

   49 ExpCommaExpOP: Expr . CommaExprZrOuMais
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    COMMA   shift, and go to state 152
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 50 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 153


State 122

   27 VarDeclNext: COMMA . ID VarDeclNext

    ID  shift, and go to state 154


State 123

   25 VarDecl: Type ID VarDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 155


State 124

   18 MethodParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 156


State 125

   20 MethodParamsNext: COMMA . Type ID MethodParamsNext

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 157


State 126

   17 MethodParams: Type ID MethodParamsNext .

    $default  reduce using rule 17 (MethodParams)


State 127

   28 Statement: IF LPAR Expr RPAR . Statement
   29          | IF LPAR Expr RPAR . Statement ELSE Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 158
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 128

   34 Statement: PRINT LPAR StatementPrint RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 129

   54 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 54 (ParseArgs)


State 130

   53 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 160


State 131

   75 Expr: LPAR error RPAR .

    $default  reduce using rule 75 (Expr)


State 132

   74 Expr: LPAR Expr RPAR .

    $default  reduce using rule 74 (Expr)


State 133

   55 Expr: Expr . AND Expr
   55     | Expr AND Expr .
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 55 (Expr)


State 134

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   65     | Expr STAR Expr .
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    $default  reduce using rule 65 (Expr)


State 135

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   66     | Expr DIV Expr .
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    $default  reduce using rule 66 (Expr)


State 136

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   57     | Expr EQ Expr .
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 57 (Expr)


State 137

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   58     | Expr GE Expr .
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 58 (Expr)


State 138

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   59     | Expr GT Expr .
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 59 (Expr)


State 139

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   60     | Expr LE Expr .
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 60 (Expr)


State 140

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   61     | Expr LT Expr .
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 61 (Expr)


State 141

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   64     | Expr MINUS Expr .
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 110

    $default  reduce using rule 64 (Expr)


State 142

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   67     | Expr MOD Expr .
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    $default  reduce using rule 67 (Expr)


State 143

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   62     | Expr NE Expr .
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 62 (Expr)


State 144

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   56     | Expr OR Expr .
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 56 (Expr)


State 145

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   63     | Expr PLUS Expr .
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 110

    $default  reduce using rule 63 (Expr)


State 146

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   69     | Expr LSHIFT Expr .
   70     | Expr . RSHIFT Expr

    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MINUS  shift, and go to state 109
    MOD    shift, and go to state 110
    PLUS   shift, and go to state 113

    $default  reduce using rule 69 (Expr)


State 147

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr
   70     | Expr RSHIFT Expr .

    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MINUS  shift, and go to state 109
    MOD    shift, and go to state 110
    PLUS   shift, and go to state 113

    $default  reduce using rule 70 (Expr)


State 148

   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   68     | Expr XOR Expr .
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 68 (Expr)


State 149

   30 Statement: WHILE LPAR Expr RPAR . Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 161
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 150

   47 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 47 (MethodInvocation)


State 151

   46 MethodInvocation: ID LPAR ExpCommaExpOP RPAR .

    $default  reduce using rule 46 (MethodInvocation)


State 152

   51 CommaExprZrOuMais: COMMA . Expr CommaExprZrOuMais

    BOOLLIT   shift, and go to state 60
    LPAR      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PLUS      shift, and go to state 64
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 65
    ID        shift, and go to state 66
    INTLIT    shift, and go to state 67

    MethodInvocation  go to state 69
    Assigment         go to state 70
    ParseArgs         go to state 71
    Expr              go to state 162


State 153

   49 ExpCommaExpOP: Expr CommaExprZrOuMais .

    $default  reduce using rule 49 (ExpCommaExpOP)


State 154

   27 VarDeclNext: COMMA ID . VarDeclNext

    COMMA  shift, and go to state 122

    $default  reduce using rule 26 (VarDeclNext)

    VarDeclNext  go to state 163


State 155

   25 VarDecl: Type ID VarDeclNext SEMICOLON .

    $default  reduce using rule 25 (VarDecl)


State 156

   18 MethodParams: STRING LSQ RSQ ID .

    $default  reduce using rule 18 (MethodParams)


State 157

   20 MethodParamsNext: COMMA Type . ID MethodParamsNext

    ID  shift, and go to state 164


State 158

   28 Statement: IF LPAR Expr RPAR Statement .
   29          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 165

    $default  reduce using rule 28 (Statement)


State 159

   34 Statement: PRINT LPAR StatementPrint RPAR SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 160

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    RSQ     shift, and go to state 166
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116


State 161

   30 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 30 (Statement)


State 162

   51 CommaExprZrOuMais: COMMA Expr . CommaExprZrOuMais
   55 Expr: Expr . AND Expr
   56     | Expr . OR Expr
   57     | Expr . EQ Expr
   58     | Expr . GE Expr
   59     | Expr . GT Expr
   60     | Expr . LE Expr
   61     | Expr . LT Expr
   62     | Expr . NE Expr
   63     | Expr . PLUS Expr
   64     | Expr . MINUS Expr
   65     | Expr . STAR Expr
   66     | Expr . DIV Expr
   67     | Expr . MOD Expr
   68     | Expr . XOR Expr
   69     | Expr . LSHIFT Expr
   70     | Expr . RSHIFT Expr

    AND     shift, and go to state 101
    STAR    shift, and go to state 102
    COMMA   shift, and go to state 152
    DIV     shift, and go to state 103
    EQ      shift, and go to state 104
    GE      shift, and go to state 105
    GT      shift, and go to state 106
    LE      shift, and go to state 107
    LT      shift, and go to state 108
    MINUS   shift, and go to state 109
    MOD     shift, and go to state 110
    NE      shift, and go to state 111
    OR      shift, and go to state 112
    PLUS    shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    XOR     shift, and go to state 116

    $default  reduce using rule 50 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 167


State 163

   27 VarDeclNext: COMMA ID VarDeclNext .

    $default  reduce using rule 27 (VarDeclNext)


State 164

   20 MethodParamsNext: COMMA Type ID . MethodParamsNext

    COMMA  shift, and go to state 125

    $default  reduce using rule 19 (MethodParamsNext)

    MethodParamsNext  go to state 168


State 165

   29 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 42 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 169
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    Assigment                        go to state 46
    ParseArgs                        go to state 47


State 166

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 170


State 167

   51 CommaExprZrOuMais: COMMA Expr CommaExprZrOuMais .

    $default  reduce using rule 51 (CommaExprZrOuMais)


State 168

   20 MethodParamsNext: COMMA Type ID MethodParamsNext .

    $default  reduce using rule 20 (MethodParamsNext)


State 169

   29 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)


State 170

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 53 (ParseArgs)
