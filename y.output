Terminals unused in grammar

   ARROW
   RESERVED
   REDUCEA


Grammar

    0 $accept: program $end

    1 program: CLASS ID LBRACE metodos RBRACE

    2 metodos: %empty
    3        | MethodDecl metodos
    4        | FieldDecl metodos
    5        | SEMICOLON metodos

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON

    8 FieldDeclNext: %empty
    9              | COMMA ID FieldDeclNext

   10 Type: BOOL
   11     | INT
   12     | DOUBLE

   13 MethodHeader: Type ID LPAR MethodParams RPAR
   14             | VOID ID LPAR MethodParams RPAR

   15 MethodParams: %empty
   16             | Type ID MethodParamsNext
   17             | STRING LSQ RSQ ID

   18 MethodParamsNext: %empty
   19                 | COMMA Type ID MethodParamsNext

   20 MethodBody: LBRACE Body RBRACE

   21 Body: %empty
   22     | VarDecl Body
   23     | Statement Body

   24 VarDecl: Type ID VarDeclNext SEMICOLON

   25 VarDeclNext: %empty
   26            | COMMA ID VarDeclNext

   27 Statement: IF LPAR ExprA RPAR Statement
   28          | IF LPAR ExprA RPAR Statement ELSE Statement
   29          | WHILE LPAR ExprA RPAR Statement
   30          | RETURN StatementExpOp SEMICOLON
   31          | LBRACE StatementZrOuMais RBRACE
   32          | StateMethodIAssignmentParseArgs SEMICOLON
   33          | PRINT LPAR StatementPrint RPAR SEMICOLON

   34 StatementZrOuMais: %empty
   35                  | Statement StatementZrOuMais

   36 StatementExpOp: %empty
   37               | ExprA

   38 StatementPrint: STRLIT
   39               | ExprA

   40 StateMethodIAssignmentParseArgs: %empty
   41                                | MethodInvocation
   42                                | ID ASSIGN ExprA
   43                                | ParseArgs

   44 MethodInvocation: ID LPAR ExpCommaExpOP RPAR

   45 ExpCommaExpOP: %empty
   46              | ExprA CommaExprZrOuMais

   47 CommaExprZrOuMais: %empty
   48                  | COMMA ExprA CommaExprZrOuMais

   49 ParseArgs: PARSEINT LPAR ID LSQ ExprA RSQ RPAR

   50 ExprA: Expr
   51      | ID ASSIGN ExprA
   52      | LPAR ID ASSIGN ExprA RPAR

   53 Expr: Expr AND Expr
   54     | Expr OR Expr
   55     | Expr EQ Expr
   56     | Expr GE Expr
   57     | Expr GT Expr
   58     | Expr LE Expr
   59     | Expr LT Expr
   60     | Expr NE Expr
   61     | Expr PLUS Expr
   62     | Expr MINUS Expr
   63     | Expr STAR Expr
   64     | Expr DIV Expr
   65     | Expr MOD Expr
   66     | Expr XOR Expr
   67     | Expr LSHIFT Expr
   68     | Expr RSHIFT Expr
   69     | NOT Expr
   70     | MINUS Expr
   71     | PLUS Expr
   72     | LPAR Expr RPAR
   73     | MethodInvocation
   74     | ParseArgs
   75     | ID
   76     | ID DOTLENGTH
   77     | REALLIT
   78     | BOOLLIT
   79     | INTLIT

   80 FieldDecl: error SEMICOLON

   81 Statement: error SEMICOLON

   82 ParseArgs: PARSEINT LPAR error RPAR

   83 MethodInvocation: ID LPAR error RPAR

   84 Expr: LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 80 81 82 83 84
BOOLLIT (258) 78
AND (259) 53
ASSIGN (260) 42 51 52
STAR (261) 63
COMMA (262) 9 19 26 48
DIV (263) 64
EQ (264) 55
GE (265) 56
GT (266) 57
LBRACE (267) 1 20 31
LE (268) 58
LPAR (269) 13 14 27 28 29 33 44 49 52 72 82 83 84
RPAR (270) 13 14 27 28 29 33 44 49 52 72 82 83 84
LSQ (271) 17 49
LT (272) 59
MINUS (273) 62 70
MOD (274) 65
NE (275) 60
NOT (276) 69
OR (277) 54
PLUS (278) 61 71
RBRACE (279) 1 20 31
RSQ (280) 17 49
SEMICOLON (281) 5 7 24 30 32 33 80 81
ARROW (282)
LSHIFT (283) 67
RSHIFT (284) 68
XOR (285) 66
BOOL (286) 10
CLASS (287) 1
DOTLENGTH (288) 76
DOUBLE (289) 12
ELSE (290) 28
IF (291) 27 28
INT (292) 11
PRINT (293) 33
PARSEINT (294) 49 82
PUBLIC (295) 6 7
RETURN (296) 30
STATIC (297) 6 7
STRING (298) 17
VOID (299) 14
WHILE (300) 29
REALLIT (301) 77
RESERVED (302)
ID (303) 1 7 9 13 14 16 17 19 24 26 42 44 49 51 52 75 76 83
INTLIT (304) 79
STRLIT (305) 38
REDUCEA (306)
REDUCE (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
metodos (55)
    on left: 2 3 4 5, on right: 1 3 4 5
MethodDecl (56)
    on left: 6, on right: 3
FieldDecl (57)
    on left: 7 80, on right: 4
FieldDeclNext (58)
    on left: 8 9, on right: 7 9
Type (59)
    on left: 10 11 12, on right: 7 13 16 19 24
MethodHeader (60)
    on left: 13 14, on right: 6
MethodParams (61)
    on left: 15 16 17, on right: 13 14
MethodParamsNext (62)
    on left: 18 19, on right: 16 19
MethodBody (63)
    on left: 20, on right: 6
Body (64)
    on left: 21 22 23, on right: 20 22 23
VarDecl (65)
    on left: 24, on right: 22
VarDeclNext (66)
    on left: 25 26, on right: 24 26
Statement (67)
    on left: 27 28 29 30 31 32 33 81, on right: 23 27 28 29 35
StatementZrOuMais (68)
    on left: 34 35, on right: 31 35
StatementExpOp (69)
    on left: 36 37, on right: 30
StatementPrint (70)
    on left: 38 39, on right: 33
StateMethodIAssignmentParseArgs (71)
    on left: 40 41 42 43, on right: 32
MethodInvocation (72)
    on left: 44 83, on right: 41 73
ExpCommaExpOP (73)
    on left: 45 46, on right: 44
CommaExprZrOuMais (74)
    on left: 47 48, on right: 46 48
ParseArgs (75)
    on left: 49 82, on right: 43 74
ExprA (76)
    on left: 50 51 52, on right: 27 28 29 37 39 42 46 48 49 51 52
Expr (77)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 84, on right: 50 53 54 55 56 57 58 59
    60 61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID LBRACE metodos RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . LBRACE metodos RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID LBRACE . metodos RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

   80 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    5 metodos: SEMICOLON . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 13
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 8

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclNext SEMICOLON

    STATIC  shift, and go to state 14


State 9

    1 program: CLASS ID LBRACE metodos . RBRACE

    RBRACE  shift, and go to state 15


State 10

    3 metodos: MethodDecl . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    4 metodos: FieldDecl . metodos

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 2 (metodos)

    metodos     go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

   80 FieldDecl: error SEMICOLON .

    $default  reduce using rule 80 (FieldDecl)


State 13

    5 metodos: SEMICOLON metodos .

    $default  reduce using rule 5 (metodos)


State 14

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclNext SEMICOLON

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 15

    1 program: CLASS ID LBRACE metodos RBRACE .

    $default  reduce using rule 1 (program)


State 16

    3 metodos: MethodDecl metodos .

    $default  reduce using rule 3 (metodos)


State 17

    4 metodos: FieldDecl metodos .

    $default  reduce using rule 4 (metodos)


State 18

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 19

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 20

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 21

   14 MethodHeader: VOID . ID LPAR MethodParams RPAR

    ID  shift, and go to state 24


State 22

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclNext SEMICOLON
   13 MethodHeader: Type . ID LPAR MethodParams RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   14 MethodHeader: VOID ID . LPAR MethodParams RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclNext SEMICOLON
   13 MethodHeader: Type ID . LPAR MethodParams RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 8 (FieldDeclNext)

    FieldDeclNext  go to state 31


State 26

   20 MethodBody: LBRACE . Body RBRACE

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 21 (Body)
    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 41
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 28

   14 MethodHeader: VOID ID LPAR . MethodParams RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 47

    $default  reduce using rule 15 (MethodParams)

    Type          go to state 48
    MethodParams  go to state 49


State 29

    9 FieldDeclNext: COMMA . ID FieldDeclNext

    ID  shift, and go to state 50


State 30

   13 MethodHeader: Type ID LPAR . MethodParams RPAR

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 47

    $default  reduce using rule 15 (MethodParams)

    Type          go to state 48
    MethodParams  go to state 51


State 31

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 32

   81 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 33

   31 Statement: LBRACE . StatementZrOuMais RBRACE

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 34 (StatementZrOuMais)
    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 54
    StatementZrOuMais                go to state 55
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 34

   27 Statement: IF . LPAR ExprA RPAR Statement
   28          | IF . LPAR ExprA RPAR Statement ELSE Statement

    LPAR  shift, and go to state 56


State 35

   33 Statement: PRINT . LPAR StatementPrint RPAR SEMICOLON

    LPAR  shift, and go to state 57


State 36

   49 ParseArgs: PARSEINT . LPAR ID LSQ ExprA RSQ RPAR
   82          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 58


State 37

   30 Statement: RETURN . StatementExpOp SEMICOLON

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    $default  reduce using rule 36 (StatementExpOp)

    StatementExpOp    go to state 67
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 70
    Expr              go to state 71


State 38

   29 Statement: WHILE . LPAR ExprA RPAR Statement

    LPAR  shift, and go to state 72


State 39

   42 StateMethodIAssignmentParseArgs: ID . ASSIGN ExprA
   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   83                 | ID . LPAR error RPAR

    ASSIGN  shift, and go to state 73
    LPAR    shift, and go to state 74


State 40

   24 VarDecl: Type . ID VarDeclNext SEMICOLON

    ID  shift, and go to state 75


State 41

   20 MethodBody: LBRACE Body . RBRACE

    RBRACE  shift, and go to state 76


State 42

   22 Body: VarDecl . Body

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 21 (Body)
    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 77
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 43

   23 Body: Statement . Body

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    BOOL      shift, and go to state 18
    DOUBLE    shift, and go to state 19
    IF        shift, and go to state 34
    INT       shift, and go to state 20
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 21 (Body)
    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Type                             go to state 40
    Body                             go to state 78
    VarDecl                          go to state 42
    Statement                        go to state 43
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 44

   32 Statement: StateMethodIAssignmentParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 45

   41 StateMethodIAssignmentParseArgs: MethodInvocation .

    $default  reduce using rule 41 (StateMethodIAssignmentParseArgs)


State 46

   43 StateMethodIAssignmentParseArgs: ParseArgs .

    $default  reduce using rule 43 (StateMethodIAssignmentParseArgs)


State 47

   17 MethodParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 80


State 48

   16 MethodParams: Type . ID MethodParamsNext

    ID  shift, and go to state 81


State 49

   14 MethodHeader: VOID ID LPAR MethodParams . RPAR

    RPAR  shift, and go to state 82


State 50

    9 FieldDeclNext: COMMA ID . FieldDeclNext

    COMMA  shift, and go to state 29

    $default  reduce using rule 8 (FieldDeclNext)

    FieldDeclNext  go to state 83


State 51

   13 MethodHeader: Type ID LPAR MethodParams . RPAR

    RPAR  shift, and go to state 84


State 52

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclNext SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 53

   81 Statement: error SEMICOLON .

    $default  reduce using rule 81 (Statement)


State 54

   35 StatementZrOuMais: Statement . StatementZrOuMais

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    RBRACE     reduce using rule 34 (StatementZrOuMais)
    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 54
    StatementZrOuMais                go to state 85
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 55

   31 Statement: LBRACE StatementZrOuMais . RBRACE

    RBRACE  shift, and go to state 86


State 56

   27 Statement: IF LPAR . ExprA RPAR Statement
   28          | IF LPAR . ExprA RPAR Statement ELSE Statement

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 87
    Expr              go to state 71


State 57

   33 Statement: PRINT LPAR . StatementPrint RPAR SEMICOLON

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66
    STRLIT    shift, and go to state 88

    StatementPrint    go to state 89
    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 90
    Expr              go to state 71


State 58

   49 ParseArgs: PARSEINT LPAR . ID LSQ ExprA RSQ RPAR
   82          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 91
    ID     shift, and go to state 92


State 59

   78 Expr: BOOLLIT .

    $default  reduce using rule 78 (Expr)


State 60

   52 ExprA: LPAR . ID ASSIGN ExprA RPAR
   72 Expr: LPAR . Expr RPAR
   84     | LPAR . error RPAR

    error     shift, and go to state 93
    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 95
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 96


State 61

   70 Expr: MINUS . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 98


State 62

   69 Expr: NOT . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 99


State 63

   71 Expr: PLUS . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 100


State 64

   77 Expr: REALLIT .

    $default  reduce using rule 77 (Expr)


State 65

   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   51 ExprA: ID . ASSIGN ExprA
   75 Expr: ID .
   76     | ID . DOTLENGTH
   83 MethodInvocation: ID . LPAR error RPAR

    ASSIGN     shift, and go to state 101
    LPAR       shift, and go to state 74
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 75 (Expr)


State 66

   79 Expr: INTLIT .

    $default  reduce using rule 79 (Expr)


State 67

   30 Statement: RETURN StatementExpOp . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 68

   73 Expr: MethodInvocation .

    $default  reduce using rule 73 (Expr)


State 69

   74 Expr: ParseArgs .

    $default  reduce using rule 74 (Expr)


State 70

   37 StatementExpOp: ExprA .

    $default  reduce using rule 37 (StatementExpOp)


State 71

   50 ExprA: Expr .
   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    AND     shift, and go to state 104
    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    OR      shift, and go to state 115
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 50 (ExprA)


State 72

   29 Statement: WHILE LPAR . ExprA RPAR Statement

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 120
    Expr              go to state 71


State 73

   42 StateMethodIAssignmentParseArgs: ID ASSIGN . ExprA

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 121
    Expr              go to state 71


State 74

   44 MethodInvocation: ID LPAR . ExpCommaExpOP RPAR
   83                 | ID LPAR . error RPAR

    error     shift, and go to state 122
    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    RPAR  reduce using rule 45 (ExpCommaExpOP)

    MethodInvocation  go to state 68
    ExpCommaExpOP     go to state 123
    ParseArgs         go to state 69
    ExprA             go to state 124
    Expr              go to state 71


State 75

   24 VarDecl: Type ID . VarDeclNext SEMICOLON

    COMMA  shift, and go to state 125

    $default  reduce using rule 25 (VarDeclNext)

    VarDeclNext  go to state 126


State 76

   20 MethodBody: LBRACE Body RBRACE .

    $default  reduce using rule 20 (MethodBody)


State 77

   22 Body: VarDecl Body .

    $default  reduce using rule 22 (Body)


State 78

   23 Body: Statement Body .

    $default  reduce using rule 23 (Body)


State 79

   32 Statement: StateMethodIAssignmentParseArgs SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 80

   17 MethodParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 127


State 81

   16 MethodParams: Type ID . MethodParamsNext

    COMMA  shift, and go to state 128

    $default  reduce using rule 18 (MethodParamsNext)

    MethodParamsNext  go to state 129


State 82

   14 MethodHeader: VOID ID LPAR MethodParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 83

    9 FieldDeclNext: COMMA ID FieldDeclNext .

    $default  reduce using rule 9 (FieldDeclNext)


State 84

   13 MethodHeader: Type ID LPAR MethodParams RPAR .

    $default  reduce using rule 13 (MethodHeader)


State 85

   35 StatementZrOuMais: Statement StatementZrOuMais .

    $default  reduce using rule 35 (StatementZrOuMais)


State 86

   31 Statement: LBRACE StatementZrOuMais RBRACE .

    $default  reduce using rule 31 (Statement)


State 87

   27 Statement: IF LPAR ExprA . RPAR Statement
   28          | IF LPAR ExprA . RPAR Statement ELSE Statement

    RPAR  shift, and go to state 130


State 88

   38 StatementPrint: STRLIT .

    $default  reduce using rule 38 (StatementPrint)


State 89

   33 Statement: PRINT LPAR StatementPrint . RPAR SEMICOLON

    RPAR  shift, and go to state 131


State 90

   39 StatementPrint: ExprA .

    $default  reduce using rule 39 (StatementPrint)


State 91

   82 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 132


State 92

   49 ParseArgs: PARSEINT LPAR ID . LSQ ExprA RSQ RPAR

    LSQ  shift, and go to state 133


State 93

   84 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 134


State 94

   72 Expr: LPAR . Expr RPAR
   84     | LPAR . error RPAR

    error     shift, and go to state 93
    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 96


State 95

   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   52 ExprA: LPAR ID . ASSIGN ExprA RPAR
   75 Expr: ID .
   76     | ID . DOTLENGTH
   83 MethodInvocation: ID . LPAR error RPAR

    ASSIGN     shift, and go to state 135
    LPAR       shift, and go to state 74
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 75 (Expr)


State 96

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr
   72     | LPAR Expr . RPAR

    AND     shift, and go to state 104
    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    RPAR    shift, and go to state 136
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    OR      shift, and go to state 115
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119


State 97

   44 MethodInvocation: ID . LPAR ExpCommaExpOP RPAR
   75 Expr: ID .
   76     | ID . DOTLENGTH
   83 MethodInvocation: ID . LPAR error RPAR

    LPAR       shift, and go to state 74
    DOTLENGTH  shift, and go to state 102

    $default  reduce using rule 75 (Expr)


State 98

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr
   70     | MINUS Expr .

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 70 (Expr)


State 99

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr
   69     | NOT Expr .

    $default  reduce using rule 69 (Expr)


State 100

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr
   71     | PLUS Expr .

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 71 (Expr)


State 101

   51 ExprA: ID ASSIGN . ExprA

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 137
    Expr              go to state 71


State 102

   76 Expr: ID DOTLENGTH .

    $default  reduce using rule 76 (Expr)


State 103

   30 Statement: RETURN StatementExpOp SEMICOLON .

    $default  reduce using rule 30 (Statement)


State 104

   53 Expr: Expr AND . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 138


State 105

   63 Expr: Expr STAR . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 139


State 106

   64 Expr: Expr DIV . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 140


State 107

   55 Expr: Expr EQ . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 141


State 108

   56 Expr: Expr GE . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 142


State 109

   57 Expr: Expr GT . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 143


State 110

   58 Expr: Expr LE . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 144


State 111

   59 Expr: Expr LT . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 145


State 112

   62 Expr: Expr MINUS . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 146


State 113

   65 Expr: Expr MOD . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 147


State 114

   60 Expr: Expr NE . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 148


State 115

   54 Expr: Expr OR . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 149


State 116

   61 Expr: Expr PLUS . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 150


State 117

   67 Expr: Expr LSHIFT . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 151


State 118

   68 Expr: Expr RSHIFT . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 152


State 119

   66 Expr: Expr XOR . Expr

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 94
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 97
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    Expr              go to state 153


State 120

   29 Statement: WHILE LPAR ExprA . RPAR Statement

    RPAR  shift, and go to state 154


State 121

   42 StateMethodIAssignmentParseArgs: ID ASSIGN ExprA .

    $default  reduce using rule 42 (StateMethodIAssignmentParseArgs)


State 122

   83 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 155


State 123

   44 MethodInvocation: ID LPAR ExpCommaExpOP . RPAR

    RPAR  shift, and go to state 156


State 124

   46 ExpCommaExpOP: ExprA . CommaExprZrOuMais

    COMMA  shift, and go to state 157

    $default  reduce using rule 47 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 158


State 125

   26 VarDeclNext: COMMA . ID VarDeclNext

    ID  shift, and go to state 159


State 126

   24 VarDecl: Type ID VarDeclNext . SEMICOLON

    SEMICOLON  shift, and go to state 160


State 127

   17 MethodParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 161


State 128

   19 MethodParamsNext: COMMA . Type ID MethodParamsNext

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 162


State 129

   16 MethodParams: Type ID MethodParamsNext .

    $default  reduce using rule 16 (MethodParams)


State 130

   27 Statement: IF LPAR ExprA RPAR . Statement
   28          | IF LPAR ExprA RPAR . Statement ELSE Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 163
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 131

   33 Statement: PRINT LPAR StatementPrint RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 132

   82 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 82 (ParseArgs)


State 133

   49 ParseArgs: PARSEINT LPAR ID LSQ . ExprA RSQ RPAR

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 165
    Expr              go to state 71


State 134

   84 Expr: LPAR error RPAR .

    $default  reduce using rule 84 (Expr)


State 135

   52 ExprA: LPAR ID ASSIGN . ExprA RPAR

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 166
    Expr              go to state 71


State 136

   72 Expr: LPAR Expr RPAR .

    $default  reduce using rule 72 (Expr)


State 137

   51 ExprA: ID ASSIGN ExprA .

    $default  reduce using rule 51 (ExprA)


State 138

   53 Expr: Expr . AND Expr
   53     | Expr AND Expr .
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 53 (Expr)


State 139

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   63     | Expr STAR Expr .
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    $default  reduce using rule 63 (Expr)


State 140

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   64     | Expr DIV Expr .
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    $default  reduce using rule 64 (Expr)


State 141

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   55     | Expr EQ Expr .
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 55 (Expr)


State 142

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   56     | Expr GE Expr .
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 56 (Expr)


State 143

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   57     | Expr GT Expr .
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 57 (Expr)


State 144

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   58     | Expr LE Expr .
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 58 (Expr)


State 145

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   59     | Expr LT Expr .
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 59 (Expr)


State 146

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   62     | Expr MINUS Expr .
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 62 (Expr)


State 147

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   65     | Expr MOD Expr .
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    $default  reduce using rule 65 (Expr)


State 148

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   60     | Expr NE Expr .
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 60 (Expr)


State 149

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   54     | Expr OR Expr .
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    AND     shift, and go to state 104
    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118
    XOR     shift, and go to state 119

    $default  reduce using rule 54 (Expr)


State 150

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   61     | Expr PLUS Expr .
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 113

    $default  reduce using rule 61 (Expr)


State 151

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   67     | Expr LSHIFT Expr .
   68     | Expr . RSHIFT Expr

    STAR   shift, and go to state 105
    DIV    shift, and go to state 106
    MINUS  shift, and go to state 112
    MOD    shift, and go to state 113
    PLUS   shift, and go to state 116

    $default  reduce using rule 67 (Expr)


State 152

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr
   68     | Expr RSHIFT Expr .

    STAR   shift, and go to state 105
    DIV    shift, and go to state 106
    MINUS  shift, and go to state 112
    MOD    shift, and go to state 113
    PLUS   shift, and go to state 116

    $default  reduce using rule 68 (Expr)


State 153

   53 Expr: Expr . AND Expr
   54     | Expr . OR Expr
   55     | Expr . EQ Expr
   56     | Expr . GE Expr
   57     | Expr . GT Expr
   58     | Expr . LE Expr
   59     | Expr . LT Expr
   60     | Expr . NE Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . STAR Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | Expr . XOR Expr
   66     | Expr XOR Expr .
   67     | Expr . LSHIFT Expr
   68     | Expr . RSHIFT Expr

    STAR    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    GE      shift, and go to state 108
    GT      shift, and go to state 109
    LE      shift, and go to state 110
    LT      shift, and go to state 111
    MINUS   shift, and go to state 112
    MOD     shift, and go to state 113
    NE      shift, and go to state 114
    PLUS    shift, and go to state 116
    LSHIFT  shift, and go to state 117
    RSHIFT  shift, and go to state 118

    $default  reduce using rule 66 (Expr)


State 154

   29 Statement: WHILE LPAR ExprA RPAR . Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 167
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 155

   83 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 83 (MethodInvocation)


State 156

   44 MethodInvocation: ID LPAR ExpCommaExpOP RPAR .

    $default  reduce using rule 44 (MethodInvocation)


State 157

   48 CommaExprZrOuMais: COMMA . ExprA CommaExprZrOuMais

    BOOLLIT   shift, and go to state 59
    LPAR      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PLUS      shift, and go to state 63
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 64
    ID        shift, and go to state 65
    INTLIT    shift, and go to state 66

    MethodInvocation  go to state 68
    ParseArgs         go to state 69
    ExprA             go to state 168
    Expr              go to state 71


State 158

   46 ExpCommaExpOP: ExprA CommaExprZrOuMais .

    $default  reduce using rule 46 (ExpCommaExpOP)


State 159

   26 VarDeclNext: COMMA ID . VarDeclNext

    COMMA  shift, and go to state 125

    $default  reduce using rule 25 (VarDeclNext)

    VarDeclNext  go to state 169


State 160

   24 VarDecl: Type ID VarDeclNext SEMICOLON .

    $default  reduce using rule 24 (VarDecl)


State 161

   17 MethodParams: STRING LSQ RSQ ID .

    $default  reduce using rule 17 (MethodParams)


State 162

   19 MethodParamsNext: COMMA Type . ID MethodParamsNext

    ID  shift, and go to state 170


State 163

   27 Statement: IF LPAR ExprA RPAR Statement .
   28          | IF LPAR ExprA RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 171

    $default  reduce using rule 27 (Statement)


State 164

   33 Statement: PRINT LPAR StatementPrint RPAR SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 165

   49 ParseArgs: PARSEINT LPAR ID LSQ ExprA . RSQ RPAR

    RSQ  shift, and go to state 172


State 166

   52 ExprA: LPAR ID ASSIGN ExprA . RPAR

    RPAR  shift, and go to state 173


State 167

   29 Statement: WHILE LPAR ExprA RPAR Statement .

    $default  reduce using rule 29 (Statement)


State 168

   48 CommaExprZrOuMais: COMMA ExprA . CommaExprZrOuMais

    COMMA  shift, and go to state 157

    $default  reduce using rule 47 (CommaExprZrOuMais)

    CommaExprZrOuMais  go to state 174


State 169

   26 VarDeclNext: COMMA ID VarDeclNext .

    $default  reduce using rule 26 (VarDeclNext)


State 170

   19 MethodParamsNext: COMMA Type ID . MethodParamsNext

    COMMA  shift, and go to state 128

    $default  reduce using rule 18 (MethodParamsNext)

    MethodParamsNext  go to state 175


State 171

   28 Statement: IF LPAR ExprA RPAR Statement ELSE . Statement

    error     shift, and go to state 32
    LBRACE    shift, and go to state 33
    IF        shift, and go to state 34
    PRINT     shift, and go to state 35
    PARSEINT  shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    ID        shift, and go to state 39

    SEMICOLON  reduce using rule 40 (StateMethodIAssignmentParseArgs)

    Statement                        go to state 176
    StateMethodIAssignmentParseArgs  go to state 44
    MethodInvocation                 go to state 45
    ParseArgs                        go to state 46


State 172

   49 ParseArgs: PARSEINT LPAR ID LSQ ExprA RSQ . RPAR

    RPAR  shift, and go to state 177


State 173

   52 ExprA: LPAR ID ASSIGN ExprA RPAR .

    $default  reduce using rule 52 (ExprA)


State 174

   48 CommaExprZrOuMais: COMMA ExprA CommaExprZrOuMais .

    $default  reduce using rule 48 (CommaExprZrOuMais)


State 175

   19 MethodParamsNext: COMMA Type ID MethodParamsNext .

    $default  reduce using rule 19 (MethodParamsNext)


State 176

   28 Statement: IF LPAR ExprA RPAR Statement ELSE Statement .

    $default  reduce using rule 28 (Statement)


State 177

   49 ParseArgs: PARSEINT LPAR ID LSQ ExprA RSQ RPAR .

    $default  reduce using rule 49 (ParseArgs)
